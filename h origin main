[1mdiff --git a/src/App.js b/src/App.js[m
[1mindex 331e061..07da390 100644[m
[1m--- a/src/App.js[m
[1m+++ b/src/App.js[m
[36m@@ -37,6 +37,16 @@[m [mimport {[m
   MenuItem,[m
   Select,[m
   Switch,[m
[32m+[m[32m  Dialog,[m
[32m+[m[32m  DialogTitle,[m
[32m+[m[32m  DialogContent,[m
[32m+[m[32m  DialogActions,[m
[32m+[m[32m  Stepper,[m
[32m+[m[32m  Step,[m
[32m+[m[32m  StepLabel,[m
[32m+[m[32m  Radio,[m
[32m+[m[32m  RadioGroup,[m
[32m+[m[32m  Stack,[m
 } from '@mui/material';[m
 import { [m
   AccountBalanceWallet, [m
[36m@@ -50,6 +60,9 @@[m [mimport {[m
   ShowChart,[m
   Gavel,[m
   Upload,[m
[32m+[m[32m  HowToVote,[m
[32m+[m[32m  LocalAtm,[m
[32m+[m[32m  Description,[m
 } from '@mui/icons-material';[m
 import { ThemeProvider } from '@mui/material/styles';[m
 import CssBaseline from '@mui/material/CssBaseline';[m
[36m@@ -141,6 +154,24 @@[m [mconst ERC20_ABI = [[m
   }[m
 ];[m
 [m
[32m+[m[32m// Add this near the top of your WalletConnectComponent[m
[32m+[m[32mconst DUMMY_TOKENS = [[m
[32m+[m[32m  {[m
[32m+[m[32m    address: "0x1234567890123456789012345678901234567890",[m
[32m+[m[32m    name: "Burger Chain DAO",[m
[32m+[m[32m    ticker: "BURGER"[m
[32m+[m[32m  },[m
[32m+[m[32m  {[m
[32m+[m[32m    address: "0x2345678901234567890123456789012345678901",[m
[32m+[m[32m    name: "Pizza Franchise DAO",[m
[32m+[m[32m    ticker: "PIZZA"[m
[32m+[m[32m  },[m
[32m+[m[32m  {[m
[32m+[m[32m    address: "0x3456789012345678901234567890123456789012",[m
[32m+[m[32m    name: "Coffee Shop DAO",[m
[32m+[m[32m    ticker: "COFFEE"[m
[32m+[m[32m  }[m
[32m+[m[32m];[m
 [m
 function WalletConnectComponent() {[m
   const { activate, active, account, library, deactivate, setError } = useWeb3React();[m
[36m@@ -159,10 +190,40 @@[m [mfunction WalletConnectComponent() {[m
   const theme = useTheme();[m
   const isMobile = useMediaQuery(theme.breakpoints.down('sm'));[m
   const [tradeMode, setTradeMode] = useState('buy');[m
[31m-  // Load token addresses from local storage on component mount[m
[32m+[m
[32m+[m[32m  // Update the useEffect for loading token addresses[m
   useEffect(() => {[m
[31m-    const storedAddresses = JSON.parse(localStorage.getItem("tokenAddresses")) || [];[m
[31m-    setTokenAddresses(storedAddresses);[m
[32m+[m[32m    const loadTokens = async () => {[m
[32m+[m[32m      try {[m
[32m+[m[32m        // Try to get tokens from localStorage first[m
[32m+[m[32m        const storedAddresses = JSON.parse(localStorage.getItem("tokenAddresses"));[m
[32m+[m[41m        [m
[32m+[m[32m        if (!storedAddresses || storedAddresses.length === 0) {[m
[32m+[m[32m          // If localStorage is empty, try to fetch from Cloudflare[m
[32m+[m[32m          try {[m
[32m+[m[32m            const response = await fetch('https://your-cloudflare-worker.workers.dev/tokens');[m
[32m+[m[32m            const cloudflareTokens = await response.json();[m
[32m+[m[32m            setTokenAddresses(cloudflareTokens);[m
[32m+[m[32m            // Optionally save to localStorage[m
[32m+[m[32m            localStorage.setItem("tokenAddresses", JSON.stringify(cloudflareTokens));[m
[32m+[m[32m          } catch (cloudflareError) {[m
[32m+[m[32m            console.log("Cloudflare fetch failed, using dummy data:", cloudflareError);[m
[32m+[m[32m            // If Cloudflare fetch fails, use dummy data[m
[32m+[m[32m            setTokenAddresses(DUMMY_TOKENS);[m
[32m+[m[32m            // Optionally save to localStorage[m
[32m+[m[32m            localStorage.setItem("tokenAddresses", JSON.stringify(DUMMY_TOKENS));[m
[32m+[m[32m          }[m
[32m+[m[32m        } else {[m
[32m+[m[32m          setTokenAddresses(storedAddresses);[m
[32m+[m[32m        }[m
[32m+[m[32m      } catch (error) {[m
[32m+[m[32m        console.error("Error loading tokens:", error);[m
[32m+[m[32m        // If all else fails, use dummy data[m
[32m+[m[32m        setTokenAddresses(DUMMY_TOKENS);[m
[32m+[m[32m      }[m
[32m+[m[32m    };[m
[32m+[m
[32m+[m[32m    loadTokens();[m
   }, []);[m
 [m
   // Auto-connect to MetaMask if authorized[m
[36m@@ -530,6 +591,132 @@[m [mconst tokenAddressChange = (v) => {[m
     investmentRequired: "",[m
   });[m
 [m
[32m+[m[32m  // Add these new state variables in WalletConnectComponent[m
[32m+[m[32m  const [stakedAmount, setStakedAmount] = useState('0');[m
[32m+[m[32m  const [proposalTitle, setProposalTitle] = useState('');[m
[32m+[m[32m  const [proposalDescription, setProposalDescription] = useState('');[m
[32m+[m[32m  const [proposals, setProposals] = useState([]);[m
[32m+[m[32m  const [selectedProposal, setSelectedProposal] = useState(null);[m
[32m+[m[32m  const [voteValue, setVoteValue] = useState('');[m
[32m+[m[32m  const [openStakeDialog, setOpenStakeDialog] = useState(false);[m
[32m+[m[32m  const [openUnstakeDialog, setOpenUnstakeDialog] = useState(false);[m
[32m+[m[32m  const [openProposalDialog, setOpenProposalDialog] = useState(false);[m
[32m+[m[32m  const [stakeAmount, setStakeAmount] = useState('');[m
[32m+[m[32m  const [unstakeAmount, setUnstakeAmount] = useState('');[m
[32m+[m[32m  const [selectedDAO, setSelectedDAO] = useState('');[m
[32m+[m[32m  const [daoDetails, setDaoDetails] = useState(null);[m
[32m+[m
[32m+[m[32m  // Add this helper function to get DAO details[m
[32m+[m[32m  const getDAODetails = (tokenAddress) => {[m
[32m+[m[32m    // Find the token info from tokenAddresses[m
[32m+[m[32m    const tokenInfo = tokenAddresses.find(token => token.address === tokenAddress);[m
[32m+[m[32m    return {[m
[32m+[m[32m      name: tokenInfo?.name || 'Unknown DAO',[m
[32m+[m[32m      ticker: tokenInfo?.ticker || '',[m
[32m+[m[32m      address: tokenAddress,[m
[32m+[m[32m      // You can add more DAO specific details here[m
[32m+[m[32m    };[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  // Add these handler functions[m
[32m+[m[32m  const handleStake = async () => {[m
[32m+[m[32m    if (!library || !account) {[m
[32m+[m[32m      setStatus("Please connect to a wallet first.");[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    try {[m
[32m+[m[32m      const signer = library.getSigner();[m
[32m+[m[32m      // Add your staking contract interaction here[m
[32m+[m[32m      // Example:[m
[32m+[m[32m      // const stakingContract = new ethers.Contract(stakingAddress, stakingABI, signer);[m
[32m+[m[32m      // await stakingContract.stake(ethers.utils.parseEther(stakeAmount));[m
[32m+[m[41m      [m
[32m+[m[32m      setOpenStakeDialog(false);[m
[32m+[m[32m      setStakeAmount('');[m
[32m+[m[32m      // Update staked amount[m
[32m+[m[32m      // fetchStakedAmount();[m
[32m+[m[32m    } catch (error) {[m
[32m+[m[32m      console.error("Staking failed:", error);[m
[32m+[m[32m    }[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  const handleUnstake = async () => {[m
[32m+[m[32m    if (!library || !account) {[m
[32m+[m[32m      setStatus("Please connect to a wallet first.");[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    try {[m
[32m+[m[32m      const signer = library.getSigner();[m
[32m+[m[32m      // Add your unstaking contract interaction here[m
[32m+[m[41m      [m
[32m+[m[32m      setOpenUnstakeDialog(false);[m
[32m+[m[32m      setUnstakeAmount('');[m
[32m+[m[32m      // Update staked amount[m
[32m+[m[32m      // fetchStakedAmount();[m
[32m+[m[32m    } catch (error) {[m
[32m+[m[32m      console.error("Unstaking failed:", error);[m
[32m+[m[32m    }[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  const handleCreateProposal = async () => {[m
[32m+[m[32m    if (!library || !account) {[m
[32m+[m[32m      setStatus("Please connect to a wallet first.");[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    try {[m
[32m+[m[32m      const signer = library.getSigner();[m
[32m+[m[32m      // Add your proposal creation contract interaction here[m
[32m+[m[41m      [m
[32m+[m[32m      // For demo purposes, adding to local state[m
[32m+[m[32m      setProposals([[m
[32m+[m[32m        ...proposals,[m
[32m+[m[32m        {[m
[32m+[m[32m          title: proposalTitle,[m
[32m+[m[32m          description: proposalDescription,[m
[32m+[m[32m          votesFor: 0,[m
[32m+[m[32m          votesAgainst: 0,[m
[32m+[m[32m        }[m
[32m+[m[32m      ]);[m
[32m+[m[41m      [m
[32m+[m[32m      setOpenProposalDialog(false);[m
[32m+[m[32m      setProposalTitle('');[m
[32m+[m[32m      setProposalDescription('');[m
[32m+[m[32m    } catch (error) {[m
[32m+[m[32m      console.error("Proposal creation failed:", error);[m
[32m+[m[32m    }[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  const handleVote = async () => {[m
[32m+[m[32m    if (!library || !account || !selectedProposal || !voteValue) {[m
[32m+[m[32m      setStatus("Please connect to a wallet and select a vote option.");[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    try {[m
[32m+[m[32m      const signer = library.getSigner();[m
[32m+[m[32m      // Add your voting contract interaction here[m
[32m+[m[41m      [m
[32m+[m[32m      // For demo purposes, updating local state[m
[32m+[m[32m      setProposals(proposals.map(p =>[m[41m [m
[32m+[m[32m        p.title === selectedProposal.title[m
[32m+[m[32m          ? {[m
[32m+[m[32m              ...p,[m
[32m+[m[32m              votesFor: voteValue === 'for' ? p.votesFor + 1 : p.votesFor,[m
[32m+[m[32m              votesAgainst: voteValue === 'against' ? p.votesAgainst + 1 : p.votesAgainst,[m
[32m+[m[32m            }[m
[32m+[m[32m          : p[m
[32m+[m[32m      ));[m
[32m+[m[41m      [m
[32m+[m[32m      setSelectedProposal(null);[m
[32m+[m[32m      setVoteValue('');[m
[32m+[m[32m    } catch (error) {[m
[32m+[m[32m      console.error("Voting failed:", error);[m
[32m+[m[32m    }[m
[32m+[m[32m  };[m
[32m+[m
   return ([m
     <Box sx={{ flexGrow: 1 }}>[m
       <AppBar position="static" sx={{ mb: 3, borderRadius: 1 }}>[m
[36m@@ -1219,6 +1406,261 @@[m [mconst tokenAddressChange = (v) => {[m
     </Box>[m
   </Container>[m
 )}[m
[32m+[m
[32m+[m[32m{activeTab === 'governance' && ([m
[32m+[m[32m  <Container>[m
[32m+[m[32m    {/* DAO Selector */}[m
[32m+[m[32m    <Paper sx={{ p: 3, mb: 3 }}>[m
[32m+[m[32m      <FormControl fullWidth>[m
[32m+[m[32m        <InputLabel>Select Franchise DAO</InputLabel>[m
[32m+[m[32m        <Select[m
[32m+[m[32m          value={selectedDAO}[m
[32m+[m[32m          onChange={(e) => {[m
[32m+[m[32m            setSelectedDAO(e.target.value);[m
[32m+[m[32m            setDaoDetails(getDAODetails(e.target.value));[m
[32m+[m[32m          }}[m
[32m+[m[32m          label="Select Franchise DAO"[m
[32m+[m[32m        >[m
[32m+[m[32m          {tokenAddresses.map((token) => ([m
[32m+[m[32m            <MenuItem key={token.address} value={token.address}>[m
[32m+[m[32m              <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>[m
[32m+[m[32m                <Typography>{token.name}</Typography>[m
[32m+[m[32m                <Chip[m[41m [m
[32m+[m[32m                  label={token.ticker}[m[41m [m
[32m+[m[32m                  size="small"[m[41m [m
[32m+[m[32m                  sx={{ ml: 1 }}[m
[32m+[m[32m                />[m
[32m+[m[32m              </Box>[m
[32m+[m[32m            </MenuItem>[m
[32m+[m[32m          ))}[m
[32m+[m[32m        </Select>[m
[32m+[m[32m      </FormControl>[m
[32m+[m[32m    </Paper>[m
[32m+[m
[32m+[m[32m    {selectedDAO ? ([m
[32m+[m[32m      <>[m
[32m+[m[32m        {/* DAO Info Header */}[m
[32m+[m[32m        <Paper sx={{ p: 3, mb: 3 }}>[m
[32m+[m[32m          <Grid container spacing={2} alignItems="center">[m
[32m+[m[32m            <Grid item xs={12} md={6}>[m
[32m+[m[32m              <Typography variant="h5">{daoDetails?.name}</Typography>[m
[32m+[m[32m              <Typography color="text.secondary" gutterBottom>[m
[32m+[m[32m                {daoDetails?.address}[m
[32m+[m[32m              </Typography>[m
[32m+[m[32m            </Grid>[m
[32m+[m[32m            <Grid item xs={12} md={6}>[m
[32m+[m[32m              <Box sx={{ display: 'flex', gap: 2, justifyContent: { xs: 'flex-start', md: 'flex-end' } }}>[m
[32m+[m[32m                <Chip[m[41m [m
[32m+[m[32m                  icon={<HowToVote />}[m[41m [m
[32m+[m[32m                  label={`${proposals.length} Active Proposals`}[m
[32m+[m[32m                />[m
[32m+[m[32m                <Chip[m[41m [m
[32m+[m[32m                  icon={<LocalAtm />}[m[41m [m
[32m+[m[32m                  label={`${stakedAmount} ${daoDetails?.ticker} Staked`}[m
[32m+[m[32m                />[m
[32m+[m[32m              </Box>[m
[32m+[m[32m            </Grid>[m
[32m+[m[32m          </Grid>[m
[32m+[m[32m        </Paper>[m
[32m+[m
[32m+[m[32m        <Grid container spacing={3}>[m
[32m+[m[32m          {/* Staking Section */}[m
[32m+[m[32m          <Grid item xs={12} md={4}>[m
[32m+[m[32m            <Paper sx={{ p: 3, height: '100%' }}>[m
[32m+[m[32m              <Typography variant="h6" gutterBottom>[m
[32m+[m[32m                Staking[m
[32m+[m[32m              </Typography>[m
[32m+[m[32m              <Box sx={{ mb: 3 }}>[m
[32m+[m[32m                <Typography variant="body2" color="text.secondary" gutterBottom>[m
[32m+[m[32m                  Currently Staked[m
[32m+[m[32m                </Typography>[m
[32m+[m[32m                <Typography variant="h4">[m
[32m+[m[32m                  {stakedAmount} {selectedTokenTicker || 'Tokens'}[m
[32m+[m[32m                </Typography>[m
[32m+[m[32m              </Box>[m
[32m+[m[32m              <Stack spacing={2}>[m
[32m+[m[32m                <Button[m
[32m+[m[32m                  variant="contained"[m
[32m+[m[32m                  startIcon={<LocalAtm />}[m
[32m+[m[32m                  onClick={() => setOpenStakeDialog(true)}[m
[32m+[m[32m                  fullWidth[m
[32m+[m[32m                >[m
[32m+[m[32m                  Stake Tokens[m
[32m+[m[32m                </Button>[m
[32m+[m[32m                <Button[m
[32m+[m[32m                  variant="outlined"[m
[32m+[m[32m                  startIcon={<LocalAtm />}[m
[32m+[m[32m                  onClick={() => setOpenUnstakeDialog(true)}[m
[32m+[m[32m                  fullWidth[m
[32m+[m[32m                >[m
[32m+[m[32m                  Unstake Tokens[m
[32m+[m[32m                </Button>[m
[32m+[m[32m              </Stack>[m
[32m+[m[32m            </Paper>[m
[32m+[m[32m          </Grid>[m
[32m+[m
[32m+[m[32m          {/* Proposals Section */}[m
[32m+[m[32m          <Grid item xs={12} md={8}>[m
[32m+[m[32m            <Paper sx={{ p: 3 }}>[m
[32m+[m[32m              <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>[m
[32m+[m[32m                <Typography variant="h6">[m
[32m+[m[32m                  Active Proposals[m
[32m+[m[32m                </Typography>[m
[32m+[m[32m                <Button[m
[32m+[m[32m                  variant="contained"[m
[32m+[m[32m                  startIcon={<Description />}[m
[32m+[m[32m                  onClick={() => setOpenProposalDialog(true)}[m
[32m+[m[32m                >[m
[32m+[m[32m                  Create Proposal[m
[32m+[m[32m                </Button>[m
[32m+[m[32m              </Box>[m
[32m+[m[41m              [m
[32m+[m[32m              {proposals.length === 0 ? ([m
[32m+[m[32m                <Box sx={{ textAlign: 'center', py: 4 }}>[m
[32m+[m[32m                  <Typography color="text.secondary">[m
[32m+[m[32m                    No active proposals[m
[32m+[m[32m                  </Typography>[m
[32m+[m[32m                </Box>[m
[32m+[m[32m              ) : ([m
[32m+[m[32m                <List>[m
[32m+[m[32m                  {proposals.map((proposal, index) => ([m
[32m+[m[32m                    <ListItem[m
[32m+[m[32m                      key={index}[m
[32m+[m[32m                      secondaryAction={[m
[32m+[m[32m                        <Button[m
[32m+[m[32m                          variant="outlined"[m
[32m+[m[32m                          size="small"[m
[32m+[m[32m                          startIcon={<HowToVote />}[m
[32m+[m[32m                          onClick={() => setSelectedProposal(proposal)}[m
[32m+[m[32m                        >[m
[32m+[m[32m                          Vote[m
[32m+[m[32m                        </Button>[m
[32m+[m[32m                      }[m
[32m+[m[32m                    >[m
[32m+[m[32m                      <ListItemText[m
[32m+[m[32m                        primary={proposal.title}[m
[32m+[m[32m                        secondary={`Votes: For (${proposal.votesFor}) Against (${proposal.votesAgainst})`}[m
[32m+[m[32m                      />[m
[32m+[m[32m                    </ListItem>[m
[32m+[m[32m                  ))}[m
[32m+[m[32m                </List>[m
[32m+[m[32m              )}[m
[32m+[m[32m            </Paper>[m
[32m+[m[32m          </Grid>[m
[32m+[m[32m        </Grid>[m
[32m+[m
[32m+[m[32m        {/* Stake Dialog */}[m
[32m+[m[32m        <Dialog open={openStakeDialog} onClose={() => setOpenStakeDialog(false)}>[m
[32m+[m[32m          <DialogTitle>Stake Tokens</DialogTitle>[m
[32m+[m[32m          <DialogContent>[m
[32m+[m[32m            <TextField[m
[32m+[m[32m              autoFocus[m
[32m+[m[32m              margin="dense"[m
[32m+[m[32m              label="Amount to Stake"[m
[32m+[m[32m              type="number"[m
[32m+[m[32m              fullWidth[m
[32m+[m[32m              value={stakeAmount}[m
[32m+[m[32m              onChange={(e) => setStakeAmount(e.target.value)}[m
[32m+[m[32m              InputProps={{[m
[32m+[m[32m                endAdornment: <InputAdornment position="end">{selectedTokenTicker || 'Tokens'}</InputAdornment>,[m
[32m+[m[32m              }}[m
[32m+[m[32m            />[m
[32m+[m[32m          </DialogContent>[m
[32m+[m[32m          <DialogActions>[m
[32m+[m[32m            <Button onClick={() => setOpenStakeDialog(false)}>Cancel</Button>[m
[32m+[m[32m            <Button onClick={handleStake} variant="contained">Stake</Button>[m
[32m+[m[32m          </DialogActions>[m
[32m+[m[32m        </Dialog>[m
[32m+[m
[32m+[m[32m        {/* Unstake Dialog */}[m
[32m+[m[32m        <Dialog open={openUnstakeDialog} onClose={() => setOpenUnstakeDialog(false)}>[m
[32m+[m[32m          <DialogTitle>Unstake Tokens</DialogTitle>[m
[32m+[m[32m          <DialogContent>[m
[32m+[m[32m            <TextField[m
[32m+[m[32m              autoFocus[m
[32m+[m[32m              margin="dense"[m
[32m+[m[32m              label="Amount to Unstake"[m
[32m+[m[32m              type="number"[m
[32m+[m[32m              fullWidth[m
[32m+[m[32m              value={unstakeAmount}[m
[32m+[m[32m              onChange={(e) => setUnstakeAmount(e.target.value)}[m
[32m+[m[32m              InputProps={{[m
[32m+[m[32m                endAdornment: <InputAdornment position="end">{selectedTokenTicker || 'Tokens'}</InputAdornment>,[m
[32m+[m[32m              }}[m
[32m+[m[32m            />[m
[32m+[m[32m          </DialogContent>[m
[32m+[m[32m          <DialogActions>[m
[32m+[m[32m            <Button onClick={() => setOpenUnstakeDialog(false)}>Cancel</Button>[m
[32m+[m[32m            <Button onClick={handleUnstake} variant="contained">Unstake</Button>[m
[32m+[m[32m          </DialogActions>[m
[32m+[m[32m        </Dialog>[m
[32m+[m
[32m+[m[32m        {/* Create Proposal Dialog */}[m
[32m+[m[32m        <Dialog[m[41m [m
[32m+[m[32m          open={openProposalDialog}[m[41m [m
[32m+[m[32m          onClose={() => setOpenProposalDialog(false)}[m
[32m+[m[32m          maxWidth="md"[m
[32m+[m[32m          fullWidth[m
[32m+[m[32m        >[m
[32m+[m[32m          <DialogTitle>Create New Proposal</DialogTitle>[m
[32m+[m[32m          <DialogContent>[m
[32m+[m[32m            <Box sx={{ mt: 2 }}>[m
[32m+[m[32m              <TextField[m
[32m+[m[32m                label="Proposal Title"[m
[32m+[m[32m                fullWidth[m
[32m+[m[32m                value={proposalTitle}[m
[32m+[m[32m                onChange={(e) => setProposalTitle(e.target.value)}[m
[32m+[m[32m                sx={{ mb: 3 }}[m
[32m+[m[32m              />[m
[32m+[m[32m              <TextField[m
[32m+[m[32m                label="Proposal Description"[m
[32m+[m[32m                fullWidth[m
[32m+[m[32m                multiline[m
[32m+[m[32m                rows={4}[m
[32m+[m[32m                value={proposalDescription}[m
[32m+[m[32m                onChange={(e) => setProposalDescription(e.target.value)}[m
[32m+[m[32m              />[m
[32m+[m[32m            </Box>[m
[32m+[m[32m          </DialogContent>[m
[32m+[m[32m          <DialogActions>[m
[32m+[m[32m            <Button onClick={() => setOpenProposalDialog(false)}>Cancel</Button>[m
[32m+[m[32m            <Button onClick={handleCreateProposal} variant="contained">Create Proposal</Button>[m
[32m+[m[32m          </DialogActions>[m
[32m+[m[32m        </Dialog>[m
[32m+[m
[32m+[m[32m        {/* Vote Dialog */}[m
[32m+[m[32m        <Dialog[m[41m [m
[32m+[m[32m          open={Boolean(selectedProposal)}[m[41m [m
[32m+[m[32m          onClose={() => setSelectedProposal(null)}[m
[32m+[m[32m        >[m
[32m+[m[32m          <DialogTitle>{selectedProposal?.title}</DialogTitle>[m
[32m+[m[32m          <DialogContent>[m
[32m+[m[32m            <FormControl>[m
[32m+[m[32m              <FormLabel>Your Vote</FormLabel>[m
[32m+[m[32m              <RadioGroup[m
[32m+[m[32m                value={voteValue}[m
[32m+[m[32m                onChange={(e) => setVoteValue(e.target.value)}[m
[32m+[m[32m              >[m
[32m+[m[32m                <FormControlLabel value="for" control={<Radio />} label="For" />[m
[32m+[m[32m                <FormControlLabel value="against" control={<Radio />} label="Against" />[m
[32m+[m[32m              </RadioGroup>[m
[32m+[m[32m            </FormControl>[m
[32m+[m[32m          </DialogContent>[m
[32m+[m[32m          <DialogActions>[m
[32m+[m[32m            <Button onClick={() => setSelectedProposal(null)}>Cancel</Button>[m
[32m+[m[32m            <Button onClick={handleVote} variant="contained">Submit Vote</Button>[m
[32m+[m[32m          </DialogActions>[m
[32m+[m[32m        </Dialog>[m
[32m+[m[32m      </>[m
[32m+[m[32m    ) : ([m
[32m+[m[32m      <Paper sx={{ p: 3, textAlign: 'center' }}>[m
[32m+[m[32m        <Typography color="text.secondary">[m
[32m+[m[32m          Please select a DAO to view governance details.[m
[32m+[m[32m        </Typography>[m
[32m+[m[32m      </Paper>[m
[32m+[m[32m    )}[m
[32m+[m[32m  </Container>[m
[32m+[m[32m)}[m
           </Box>[m
         </Container>[m
       )}[m
